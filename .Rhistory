corr("specdata")
source("corr.R")
source("corr.R")
source("corr.R")
corr("specdata")
source("corr.R")
corr"specdata"
corr("specdata")
source("corr.R")
corr("specdata")
submit()
submit()
submit()
x<-c("a","b","c","d","e","f","h")
for(letter in x)print(letter)
y<-1:10
for(letter in y)print(letter)
x<-c(T,F)
x
for(letter in x)print(letter)
x<-1:20
use<-x>10
use
x[x>10]
x{use}
x[use]
use[x]
use[T]
y<-use=T
y<-use==T
y
use[y]
use[use]
source("function.R")
trial(1,2,3)
formals(trial)
a<-1
b<-2
c<-3
formals(trial)
source("function.R")
formals(trial)
source("function.R")
c<-5
trial(1,2)
source(function.R)
source("function.R")
trial(1,2)
formals(trial)
args(lm)
f<-function(a,b){}
f<-function(a,b){a^2}
f(2)
f<-function(a,b){a^2+b}
f(2)
lm
a
b
c
d
e
type
h
k
l
z
x
use
y
z
w
u
v
t
t(8)
j<-matrix(1:8,2,4)
j
j<-matrix(1:4)
j
j<-matrix(1:4,2,2)
j
t(j)
j
t(j)
t(a)
source("library")
library
search()
c
t
c()
t()
?t()
?c()
c<-NULL
c
library(swirl)
swirl()
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
?dir.create
dir.create(path="./testdir2/testdir3",recursive=T)
dir.create(file.path('testdir2','testdir3'),recursive=F)
play()
?dir.remove
??dir.remove
?dir.create
nxt()
dir.create(file.path('testdir2','testdir3'),recursive=T)
dir.create(file.path('testdr2''testdr3'),recursive=TRUE)
dir.create(file.path('testdir2','testdir3'),recursive=TRUE)
?unlink
unlink("testdir2",recursive=F)
unlink("testdir2",recursive=T)
unlink("testdir2",recursive=T)
play()
dir.create(filepath('testdir2','testdir3'),recursive=T)
dir.create(filepath=('testdir2','testdir3'),recursive=TRUE)
dir.create(file.path('testdir2''testdir3'),recursive=T)
geted()
getwd()
dir.create(file.path('testdir2','testdir3'),recursive=TRUE)
nxt()
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
par()
unlink("testdir",recursive=TRUE)
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
play()
x<-list(a=1:4,b=c(T,F,T),c=c("a","b","c""neebonda"))
x<-list(a=1:4,b=c(T,F,T),c=c("a","neebonda"))
x
unlist(x,recursive=TRUE,use.names=TRUE)
as.class(x)
class(x)
as.vector(x)
class(x)
as.vector(x)
nxt()
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0,5,55,-10,6)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
x<-num_vect>=6
num_vect>=6
my_char<-c("MY","name","is")
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=
" ")
my_name<-"harsha"
my_name<-c(my_char,"harsha")
my_name
paste(my_name,collapse=" ")
paste("Hello","world",sep=" ")
paste("Hello","world!",sep = " ")
paste(1:3,c("X","y","Z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_na<-my-data==NA
my_na<-my_data==NA
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","sean")
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patients","age","bp","rating","test")
cnames<-c("patients","age","weight","bp","rating","test")
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-colnames
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<10
10<=10
5!=7
5!=7
5==7
!5==7
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE/c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FA;LSE)
TRUE|C(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.date()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
play()
?paste
paste
nxt()
submit()
submit()
telegram("hello")
play()
paste("start","Hello","stop")
nxt()
submit()
telegram("fuck you!")
submit()
submit()
submit()
mad_libs("gurgaon","frustrated","signal jammers")
submit()
"I"%p%"love"%p%"R!"
head(flags)
dim(flage)
dim(flags)
viewinfo()
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
laaply(flags_colors,class)
lapply(flags_colors,sum)
lapply(flag_colours,sum)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-sapply(flags,unique)
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
laaply(unique_vals,function(elem) elem[2])
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(floags,class)
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_period)
table(plants$Active_Growth_Period)
str(plants)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.date("1969-01-01")
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,size=10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1),size=100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
rbinom(100,size=1,prob=.7)
rbinom(n=100,size=1,prob=0.7)
flips2<-rbinom(n=100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(n=5,lambda=10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
??cars
?cars
head(cars)
plots(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist,xlab="speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(formula=mpg~cyl,data=mtcars)
hist(mtcars$mpg)
swirl()
ls()
rm(list=ls())
x<-3
rm(ls())
rm(ls)
rm(x<-ls())
rm(list=ls())
clear
?clear
rm)
rm
rm()
rm(list=ls())
rm(list=ls())
setwd("./a3")
getwd
getwd()]
setwd("..")
getwd()
setwd("./a3")
getwd()
